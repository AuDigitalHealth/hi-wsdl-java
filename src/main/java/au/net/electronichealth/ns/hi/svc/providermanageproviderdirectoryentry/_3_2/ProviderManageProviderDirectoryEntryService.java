
package au.net.electronichealth.ns.hi.svc.providermanageproviderdirectoryentry._3_2;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ProviderManageProviderDirectoryEntryService", targetNamespace = "http://ns.electronichealth.net.au/hi/svc/ProviderManageProviderDirectoryEntry/3.2.0", wsdlLocation = "HI_ProviderManageProviderDirectoryEntry-3.2.0.wsdl")
public class ProviderManageProviderDirectoryEntryService
    extends Service
{

    private final static URL PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_WSDL_LOCATION;
    private final static WebServiceException PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_EXCEPTION;
    private final static QName PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_QNAME = new QName("http://ns.electronichealth.net.au/hi/svc/ProviderManageProviderDirectoryEntry/3.2.0", "ProviderManageProviderDirectoryEntryService");

    static {
        PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_WSDL_LOCATION = au.net.electronichealth.ns.hi.svc.providermanageproviderdirectoryentry._3_2.ProviderManageProviderDirectoryEntryService.class.getResource("HI_ProviderManageProviderDirectoryEntry-3.2.0.wsdl");
        WebServiceException e = null;
        if (PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'HI_ProviderManageProviderDirectoryEntry-3.2.0.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_EXCEPTION = e;
    }

    public ProviderManageProviderDirectoryEntryService() {
        super(__getWsdlLocation(), PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_QNAME);
    }

    public ProviderManageProviderDirectoryEntryService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_QNAME, features);
    }

    public ProviderManageProviderDirectoryEntryService(URL wsdlLocation) {
        super(wsdlLocation, PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_QNAME);
    }

    public ProviderManageProviderDirectoryEntryService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_QNAME, features);
    }

    public ProviderManageProviderDirectoryEntryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ProviderManageProviderDirectoryEntryService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ProviderManageProviderDirectoryEntryPortType
     */
    @WebEndpoint(name = "ProviderManageProviderDirectoryEntrySOAP12Port")
    public ProviderManageProviderDirectoryEntryPortType getProviderManageProviderDirectoryEntrySOAP12Port() {
        return super.getPort(new QName("http://ns.electronichealth.net.au/hi/svc/ProviderManageProviderDirectoryEntry/3.2.0", "ProviderManageProviderDirectoryEntrySOAP12Port"), ProviderManageProviderDirectoryEntryPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProviderManageProviderDirectoryEntryPortType
     */
    @WebEndpoint(name = "ProviderManageProviderDirectoryEntrySOAP12Port")
    public ProviderManageProviderDirectoryEntryPortType getProviderManageProviderDirectoryEntrySOAP12Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://ns.electronichealth.net.au/hi/svc/ProviderManageProviderDirectoryEntry/3.2.0", "ProviderManageProviderDirectoryEntrySOAP12Port"), ProviderManageProviderDirectoryEntryPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_EXCEPTION!= null) {
            throw PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_EXCEPTION;
        }
        return PROVIDERMANAGEPROVIDERDIRECTORYENTRYSERVICE_WSDL_LOCATION;
    }

}
